import React, { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { Bot, X, Send, Mic, MicOff, Sparkles } from 'lucide-react';
import { useLanguage } from '../contexts/LanguageContext';
import AIService from '../services/AIService';

interface AIAssistantProps {
  isOpen: boolean;
  onClose: () => void;
}

interface Message {
  id: string;
  type: 'user' | 'ai';
  content: string;
  timestamp: Date;
}

const AIAssistant: React.FC<AIAssistantProps> = ({ isOpen, onClose }) => {
  const { t } = useLanguage();
  const [messages, setMessages] = useState<Message[]>([
    {
      id: '1',
      type: 'ai',
      content: 'Hello! I\'m your AI farming assistant. I can help you with crop recommendations, pest identification, weather advice, and more. How can I assist you today?',
      timestamp: new Date()
    }
  ]);
  const [inputMessage, setInputMessage] = useState('');
  const [isTyping, setIsTyping] = useState(false);
  const [isListening, setIsListening] = useState(false);

  const handleSendMessage = async (message: string) => {
    if (!message.trim()) return;

    // Add user message
    const userMessage: Message = {
      id: Date.now().toString(),
      type: 'user',
      content: message,
      timestamp: new Date()
    };
    setMessages(prev => [...prev, userMessage]);
    setInputMessage('');
    setIsTyping(true);

    // Simulate AI processing
    setTimeout(async () => {
      const aiResponse = await generateAIResponse(message);
      const aiMessage: Message = {
        id: (Date.now() + 1).toString(),
        type: 'ai',
        content: aiResponse,
        timestamp: new Date()
      };
      setMessages(prev => [...prev, aiMessage]);
      setIsTyping(false);
    }, 1500);
  };

  const generateAIResponse = async (userMessage: string): Promise<string> => {
    const message = userMessage.toLowerCase();
    
    // Get localized responses based on current language
    const getLocalizedResponse = (key: string) => {
      const responses: { [key: string]: { [lang: string]: string } } = {
        diseaseHelp: {
          en: `I can help you identify plant diseases! Here's what you can do:

ЁЯФН **Disease Identification:**
- Take a clear photo of the affected plant
- Go to Pest Detection screen
- Upload or capture the image
- I'll analyze it and provide treatment recommendations

ЁЯУЛ **Common Signs to Look For:**
- Yellow or brown spots on leaves
- Wilting or drooping
- Unusual growth patterns
- Insect damage

Would you like me to guide you through the pest detection process?`,
          hi: `рдореИрдВ рдкреМрдзреЛрдВ рдХреА рдмреАрдорд╛рд░рд┐рдпреЛрдВ рдХреА рдкрд╣рдЪрд╛рди рдореЗрдВ рдЖрдкрдХреА рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВ! рдпрд╣рд╛рдВ рдмрддрд╛рдпрд╛ рдЧрдпрд╛ рд╣реИ рдХрд┐ рдЖрдк рдХреНрдпрд╛ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ:

ЁЯФН **рд░реЛрдЧ рдкрд╣рдЪрд╛рди:**
- рдкреНрд░рднрд╛рд╡рд┐рдд рдкреМрдзреЗ рдХреА рд╕реНрдкрд╖реНрдЯ рддрд╕реНрд╡реАрд░ рд▓реЗрдВ
- рдХреАрдЯ рдкрд╣рдЪрд╛рди рд╕реНрдХреНрд░реАрди рдкрд░ рдЬрд╛рдПрдВ
- рдЫрд╡рд┐ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ рдпрд╛ рдХреИрдкреНрдЪрд░ рдХрд░реЗрдВ
- рдореИрдВ рдЗрд╕рдХрд╛ рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдХрд░реВрдВрдЧрд╛ рдФрд░ рдЙрдкрдЪрд╛рд░ рдХреА рд╕рд┐рдлрд╛рд░рд┐рд╢реЗрдВ рдкреНрд░рджрд╛рди рдХрд░реВрдВрдЧрд╛

ЁЯУЛ **рджреЗрдЦрдиреЗ рдпреЛрдЧреНрдп рд╕рд╛рдорд╛рдиреНрдп рд╕рдВрдХреЗрдд:**
- рдкрддреНрддрд┐рдпреЛрдВ рдкрд░ рдкреАрд▓реЗ рдпрд╛ рднреВрд░реЗ рдзрдмреНрдмреЗ
- рдореБрд░рдЭрд╛рдирд╛ рдпрд╛ рдЭреБрдХрдирд╛
- рдЕрд╕рд╛рдорд╛рдиреНрдп рд╡реГрджреНрдзрд┐ рдкреИрдЯрд░реНрди
- рдХреАрдЯ рдХреНрд╖рддрд┐

рдХреНрдпрд╛ рдЖрдк рдЪрд╛рд╣рддреЗ рд╣реИрдВ рдХрд┐ рдореИрдВ рдЖрдкрдХреЛ рдХреАрдЯ рдкрд╣рдЪрд╛рди рдкреНрд░рдХреНрд░рд┐рдпрд╛ рдХреЗ рдорд╛рдзреНрдпрдо рд╕реЗ рдорд╛рд░реНрдЧрджрд░реНрд╢рди рдХрд░реВрдВ?`,
          te: `р░ор▒Кр░Хр▒Нр░Хр░▓ р░╡р▒Нр░пр░╛р░зр▒Бр░▓ р░Чр▒Бр░░р▒Нр░др░┐р░Вр░кр▒Бр░▓р▒Л р░ир▒Зр░ир▒Б р░ор▒Ар░Хр▒Б р░╕р░╣р░╛р░пр░В р░Ър▒Зр░пр░Чр░▓р░ир▒Б! р░ор▒Ар░░р▒Б р░Пр░ор░┐ р░Ър▒Зр░пр░╡р░Ър▒Нр░Ър▒Л р░Зр░Хр▒Нр░Хр░б р░Йр░Вр░жр░┐:

ЁЯФН **р░╡р▒Нр░пр░╛р░зр░┐ р░Чр▒Бр░░р▒Нр░др░┐р░Вр░кр▒Б:**
- р░кр▒Нр░░р░нр░╛р░╡р░┐р░д р░ор▒Кр░Хр▒Нр░Х р░пр▒Кр░Хр▒Нр░Х р░╕р▒Нр░кр░╖р▒Нр░Яр░ор▒Ир░и р░лр▒Лр░Яр▒Л р░др▒Ар░пр░Вр░бр░┐
- р░Хр▒Ар░Яр░Хр░╛р░▓ р░Чр▒Бр░░р▒Нр░др░┐р░Вр░кр▒Б р░╕р▒Нр░Хр▒Нр░░р▒Ар░ир▒НтАМр░Хр▒Б р░╡р▒Жр░│р▒Нр░▓р░Вр░бр░┐
- р░Ър░┐р░др▒Нр░░р░╛р░ир▒Нр░ир░┐ р░Ер░кр▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░пр░Вр░бр░┐ р░▓р▒Зр░жр░╛ р░Хр▒Нр░пр░╛р░кр▒Нр░Ър░░р▒Н р░Ър▒Зр░пр░Вр░бр░┐
- р░ир▒Зр░ир▒Б р░жр░╛р░ир░┐р░ир░┐ р░╡р░┐р░╢р▒Нр░▓р▒Зр░╖р░┐р░╕р▒Нр░др░╛р░ир▒Б р░ор░░р░┐р░пр▒Б р░Ър░┐р░Хр░┐р░др▒Нр░╕ р░╕р░┐р░лр░╛р░░р▒Нр░╕р▒Бр░▓р░ир▒Б р░Ер░Вр░жр░┐р░╕р▒Нр░др░╛р░ир▒Б

ЁЯУЛ **р░Ър▒Вр░бр░╡р░▓р░╕р░┐р░и р░╕р░╛р░зр░╛р░░р░г р░╕р░Вр░Хр▒Зр░др░╛р░▓р▒Б:**
- р░Жр░Хр▒Бр░▓р░кр▒И р░кр░╕р▒Бр░кр▒Б р░▓р▒Зр░жр░╛ р░Чр▒Лр░зр▒Бр░о р░░р░Вр░Чр▒Б р░ор░Ър▒Нр░Ър░▓р▒Б
- р░╡р░╛р░бр░┐р░кр▒Лр░╡р░бр░В р░▓р▒Зр░жр░╛ р░╡р░Вр░Чр░┐р░кр▒Лр░╡р░бр░В
- р░Ер░╕р░╛р░зр░╛р░░р░г р░кр▒Жр░░р▒Бр░Чр▒Бр░жр░▓ р░ир░ор▒Вр░ир░╛р░▓р▒Б
- р░Хр▒Ар░Яр░Хр░╛р░▓ р░ир░╖р▒Нр░Яр░В

р░Хр▒Ар░Яр░Хр░╛р░▓ р░Чр▒Бр░░р▒Нр░др░┐р░Вр░кр▒Б р░кр▒Нр░░р░Хр▒Нр░░р░┐р░п р░жр▒Нр░╡р░╛р░░р░╛ р░ир▒Зр░ир▒Б р░ор▒Ар░Хр▒Б р░ор░╛р░░р▒Нр░Чр░жр░░р▒Нр░╢р░ир░В р░Ър▒Зр░пр░╛р░▓р░ир░┐ р░ор▒Ар░░р▒Б р░Ер░ир▒Бр░Хр▒Бр░Вр░Яр▒Бр░ир▒Нр░ир░╛р░░р░╛?`,
          ta: `родро╛ро╡ро░ роирпЛропрпНроХро│рпИ роЕроЯрпИропро╛ро│роорпН роХро╛рог роиро╛ройрпН роЙроЩрпНроХро│рпБроХрпНроХрпБ роЙродро╡ роорпБроЯро┐ропрпБроорпН! роирпАроЩрпНроХро│рпН роОройрпНрой роЪрпЖропрпНропро▓ро╛роорпН роОройрпНрокродрпБ роЗроЩрпНроХрпЗ:

ЁЯФН **роирпЛропрпН роЕроЯрпИропро╛ро│роорпН:**
- рокро╛родро┐роХрпНроХрокрпНрокроЯрпНроЯ родро╛ро╡ро░родрпНродро┐ройрпН родрпЖро│ро┐ро╡ро╛рой рокрпБроХрпИрокрпНрокроЯроорпН роОроЯрпБроХрпНроХро╡рпБроорпН
- рокрпВроЪрпНроЪро┐ роХрогрпНроЯро▒ро┐родро▓рпН родро┐ро░рпИроХрпНроХрпБ роЪрпЖро▓рпНро▓ро╡рпБроорпН
- рокроЯродрпНродрпИ рокродро┐ро╡рпЗро▒рпНро▒ро╡рпБроорпН роЕро▓рпНро▓родрпБ роХрпИрокрпНрокро▒рпНро▒ро╡рпБроорпН
- роиро╛ройрпН роЕродрпИ рокроХрпБрокрпНрокро╛ропрпНро╡рпБ роЪрпЖропрпНродрпБ роЪро┐роХро┐роЪрпНроЪрпИ рокро░ро┐роирпНродрпБро░рпИроХро│рпИ ро╡ро┤роЩрпНроХрпБро╡рпЗройрпН

ЁЯУЛ **рокро╛ро░рпНроХрпНроХ ро╡рпЗрогрпНроЯро┐роп рокрпКродрпБро╡ро╛рой роЕро▒ро┐роХрпБро▒ро┐роХро│рпН:**
- роЗро▓рпИроХро│ро┐ро▓рпН роороЮрпНроЪро│рпН роЕро▓рпНро▓родрпБ рокро┤рпБрокрпНрокрпБ рокрпБро│рпНро│ро┐роХро│рпН
- ро╡ро╛роЯрпБродро▓рпН роЕро▓рпНро▓родрпБ родрпКроЩрпНроХрпБродро▓рпН
- роЕроЪро╛родро╛ро░рог ро╡ро│ро░рпНроЪрпНроЪро┐ роорпБро▒рпИроХро│рпН
- рокрпВроЪрпНроЪро┐ роЪрпЗродроорпН

рокрпВроЪрпНроЪро┐ роХрогрпНроЯро▒ро┐родро▓рпН роЪрпЖропро▓рпНроорпБро▒рпИропро┐ройрпН роорпВро▓роорпН роиро╛ройрпН роЙроЩрпНроХро│рпБроХрпНроХрпБ ро╡ро┤ро┐роХро╛роЯрпНроЯ ро╡рпЗрогрпНроЯрпБрооро╛?`
        },
        cropRecommendations: {
          en: `ЁЯМ╛ **AI Crop Recommendations for your area:**

Based on current conditions, here are the best crops for you:

1. **Paddy** (BPT 5204 - Sona Masuri)
   тАв Expected Yield: 45-50 quintals/acre
   тАв Profitability: 8/10
   тАв Risk Level: Low
   тАв Best Sowing: June 15 - July 15

2. **Tomato** (Arka Rakshak)
   тАв Expected Yield: 400-500 quintals/acre
   тАв Profitability: 9/10
   тАв Risk Level: Medium
   тАв Best Sowing: Year round (protected cultivation)

3. **Wheat** (HD 2967)
   тАв Expected Yield: 35-40 quintals/acre
   тАв Profitability: 7/10
   тАв Risk Level: Low
   тАв Best Sowing: November 15 - December 15

ЁЯТб These recommendations are based on your location, season, and current market conditions. Would you like detailed information about any specific crop?`,
          hi: `ЁЯМ╛ **рдЖрдкрдХреЗ рдХреНрд╖реЗрддреНрд░ рдХреЗ рд▓рд┐рдП AI рдлрд╕рд▓ рд╕рд┐рдлрд╛рд░рд┐рд╢реЗрдВ:**

рд╡рд░реНрддрдорд╛рди рд╕реНрдерд┐рддрд┐рдпреЛрдВ рдХреЗ рдЖрдзрд╛рд░ рдкрд░, рдпрд╣рд╛рдВ рдЖрдкрдХреЗ рд▓рд┐рдП рд╕рдмрд╕реЗ рдЕрдЪреНрдЫреА рдлрд╕рд▓реЗрдВ рд╣реИрдВ:

1. **рдзрд╛рди** (BPT 5204 - рд╕реЛрдирд╛ рдорд╕реВрд░реА)
   тАв рдЕрдкреЗрдХреНрд╖рд┐рдд рдЙрдкрдЬ: 45-50 рдХреНрд╡рд┐рдВрдЯрд▓/рдПрдХрдбрд╝
   тАв рд▓рд╛рднрдкреНрд░рджрддрд╛: 8/10
   тАв рдЬреЛрдЦрд┐рдо рд╕реНрддрд░: рдХрдо
   тАв рд╕рд░реНрд╡реЛрддреНрддрдо рдмреБрдЖрдИ: 15 рдЬреВрди - 15 рдЬреБрд▓рд╛рдИ

2. **рдЯрдорд╛рдЯрд░** (рдЕрд░реНрдХрд╛ рд░рдХреНрд╖рдХ)
   тАв рдЕрдкреЗрдХреНрд╖рд┐рдд рдЙрдкрдЬ: 400-500 рдХреНрд╡рд┐рдВрдЯрд▓/рдПрдХрдбрд╝
   тАв рд▓рд╛рднрдкреНрд░рджрддрд╛: 9/10
   тАв рдЬреЛрдЦрд┐рдо рд╕реНрддрд░: рдордзреНрдпрдо
   тАв рд╕рд░реНрд╡реЛрддреНрддрдо рдмреБрдЖрдИ: рд╕рд╛рд▓ рднрд░ (рд╕рдВрд░рдХреНрд╖рд┐рдд рдЦреЗрддреА)

3. **рдЧреЗрд╣реВрдВ** (HD 2967)
   тАв рдЕрдкреЗрдХреНрд╖рд┐рдд рдЙрдкрдЬ: 35-40 рдХреНрд╡рд┐рдВрдЯрд▓/рдПрдХрдбрд╝
   тАв рд▓рд╛рднрдкреНрд░рджрддрд╛: 7/10
   тАв рдЬреЛрдЦрд┐рдо рд╕реНрддрд░: рдХрдо
   тАв рд╕рд░реНрд╡реЛрддреНрддрдо рдмреБрдЖрдИ: 15 рдирд╡рдВрдмрд░ - 15 рджрд┐рд╕рдВрдмрд░

ЁЯТб рдпреЗ рд╕рд┐рдлрд╛рд░рд┐рд╢реЗрдВ рдЖрдкрдХреЗ рд╕реНрдерд╛рди, рдореМрд╕рдо рдФрд░ рд╡рд░реНрддрдорд╛рди рдмрд╛рдЬрд╛рд░ рд╕реНрдерд┐рддрд┐рдпреЛрдВ рдкрд░ рдЖрдзрд╛рд░рд┐рдд рд╣реИрдВред рдХреНрдпрд╛ рдЖрдк рдХрд┐рд╕реА рд╡рд┐рд╢рд┐рд╖реНрдЯ рдлрд╕рд▓ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рд╡рд┐рд╕реНрддреГрдд рдЬрд╛рдирдХрд╛рд░реА рдЪрд╛рд╣рддреЗ рд╣реИрдВ?`,
          te: `ЁЯМ╛ **р░ор▒А р░кр▒Нр░░р░╛р░Вр░др░╛р░ир░┐р░Хр░┐ AI р░кр░Вр░Я р░╕р░┐р░лр░╛р░░р▒Нр░╕р▒Бр░▓р▒Б:**

р░кр▒Нр░░р░╕р▒Нр░др▒Бр░д р░кр░░р░┐р░╕р▒Нр░ер░┐р░др▒Бр░▓ р░Жр░зр░╛р░░р░Вр░Чр░╛, р░ор▒Ар░Хр▒Б р░Йр░др▒Нр░др░ор░ор▒Ир░и р░кр░Вр░Яр░▓р▒Б р░Зр░╡р░┐:

1. **р░╡р░░р░┐** (BPT 5204 - р░╕р▒Лр░ир░ор░╕р▒Вр░░р░┐)
   тАв р░Ер░Вр░Ър░ир░╛ р░жр░┐р░Чр▒Бр░мр░бр░┐: 45-50 р░Хр▒Нр░╡р░┐р░Вр░Яр░▓р▒Нр░╕р▒Н/р░Ор░Хр░░р░В
   тАв р░▓р░╛р░нр░жр░╛р░пр░Хр░д: 8/10
   тАв р░░р░┐р░╕р▒Нр░Хр▒Н р░▓р▒Жр░╡р░▓р▒Н: р░др░Хр▒Нр░Хр▒Бр░╡
   тАв р░Йр░др▒Нр░др░о р░╡р░┐р░др▒Нр░др░ир░В: р░Ьр▒Вр░ир▒Н 15 - р░Ьр▒Вр░▓р▒И 15

2. **р░Яр░ор░╛р░Яр▒Л** (р░Ер░░р▒Нр░Х р░░р░Хр▒Нр░╖р░Хр▒Н)
   тАв р░Ер░Вр░Ър░ир░╛ р░жр░┐р░Чр▒Бр░мр░бр░┐: 400-500 р░Хр▒Нр░╡р░┐р░Вр░Яр░▓р▒Нр░╕р▒Н/р░Ор░Хр░░р░В
   тАв р░▓р░╛р░нр░жр░╛р░пр░Хр░д: 9/10
   тАв р░░р░┐р░╕р▒Нр░Хр▒Н р░▓р▒Жр░╡р░▓р▒Н: р░ор░зр▒Нр░пр░о
   тАв р░Йр░др▒Нр░др░о р░╡р░┐р░др▒Нр░др░ир░В: р░Пр░бр░╛р░жр░┐ р░кр▒Кр░бр░╡р▒Бр░ир░╛ (р░░р░Хр▒Нр░╖р░┐р░д р░╕р░╛р░Чр▒Б)

3. **р░Чр▒Лр░зр▒Бр░о** (HD 2967)
   тАв р░Ер░Вр░Ър░ир░╛ р░жр░┐р░Чр▒Бр░мр░бр░┐: 35-40 р░Хр▒Нр░╡р░┐р░Вр░Яр░▓р▒Нр░╕р▒Н/р░Ор░Хр░░р░В
   тАв р░▓р░╛р░нр░жр░╛р░пр░Хр░д: 7/10
   тАв р░░р░┐р░╕р▒Нр░Хр▒Н р░▓р▒Жр░╡р░▓р▒Н: р░др░Хр▒Нр░Хр▒Бр░╡
   тАв р░Йр░др▒Нр░др░о р░╡р░┐р░др▒Нр░др░ир░В: р░ир░╡р░Вр░мр░░р▒Н 15 - р░бр░┐р░╕р▒Жр░Вр░мр░░р▒Н 15

ЁЯТб р░И р░╕р░┐р░лр░╛р░░р▒Нр░╕р▒Бр░▓р▒Б р░ор▒А р░╕р▒Нр░ер░╛р░ир░В, р░╕р▒Ар░Ьр░ир▒Н р░ор░░р░┐р░пр▒Б р░кр▒Нр░░р░╕р▒Нр░др▒Бр░д р░ор░╛р░░р▒Нр░Хр▒Жр░Яр▒Н р░кр░░р░┐р░╕р▒Нр░ер░┐р░др▒Бр░▓ р░Жр░зр░╛р░░р░Вр░Чр░╛ р░Йр░ир▒Нр░ир░╛р░пр░┐. р░ор▒Ар░░р▒Б р░Пр░жр▒Ир░ир░╛ р░ир░┐р░░р▒Нр░жр░┐р░╖р▒Нр░Я р░кр░Вр░Я р░Чр▒Бр░░р░┐р░Вр░Ър░┐ р░╡р░┐р░╡р░░р░гр░╛р░др▒Нр░ор░Х р░╕р░ор░╛р░Ър░╛р░░р░В р░Хр░╛р░╡р░╛р░▓р░╛?`,
          ta: `ЁЯМ╛ **роЙроЩрпНроХро│рпН рокроХрпБродро┐роХрпНроХро╛рой AI рокропро┐ро░рпН рокро░ро┐роирпНродрпБро░рпИроХро│рпН:**

родро▒рпНрокрпЛродрпИроп роиро┐ро▓рпИроорпИроХро│ро┐ройрпН роЕроЯро┐рокрпНрокроЯрпИропро┐ро▓рпН, роЙроЩрпНроХро│рпБроХрпНроХро╛рой роЪро┐ро▒роирпНрод рокропро┐ро░рпНроХро│рпН роЗро╡рпИ:

1. **роирпЖро▓рпН** (BPT 5204 - роЪрпЛройроороЪрпВро░ро┐)
   тАв роОродро┐ро░рпНрокро╛ро░рпНроХрпНроХрокрпНрокроЯрпБроорпН ро╡ро┐ро│рпИроЪрпНроЪро▓рпН: 45-50 роХрпБро╡ро┐рогрпНроЯро▓рпН/роПроХрпНроХро░рпН
   тАв ро▓ро╛рокроХро░родрпНродройрпНроорпИ: 8/10
   тАв роЖрокродрпНродрпБ роиро┐ро▓рпИ: роХрпБро▒рпИро╡рпБ
   тАв роЪро┐ро▒роирпНрод ро╡ро┐родрпИрокрпНрокрпБ: роЬрпВройрпН 15 - роЬрпВро▓рпИ 15

2. **родроХрпНроХро╛ро│ро┐** (роЕро░рпНроХрпНроХ ро░роХрпНро╖роХрпН)
   тАв роОродро┐ро░рпНрокро╛ро░рпНроХрпНроХрокрпНрокроЯрпБроорпН ро╡ро┐ро│рпИроЪрпНроЪро▓рпН: 400-500 роХрпБро╡ро┐рогрпНроЯро▓рпН/роПроХрпНроХро░рпН
   тАв ро▓ро╛рокроХро░родрпНродройрпНроорпИ: 9/10
   тАв роЖрокродрпНродрпБ роиро┐ро▓рпИ: роироЯрпБродрпНродро░
   тАв роЪро┐ро▒роирпНрод ро╡ро┐родрпИрокрпНрокрпБ: роЖрогрпНроЯрпБ роорпБро┤рпБро╡родрпБроорпН (рокро╛родрпБроХро╛роХрпНроХрокрпНрокроЯрпНроЯ роЪро╛роХрпБрокроЯро┐)

3. **роХрпЛродрпБроорпИ** (HD 2967)
   тАв роОродро┐ро░рпНрокро╛ро░рпНроХрпНроХрокрпНрокроЯрпБроорпН ро╡ро┐ро│рпИроЪрпНроЪро▓рпН: 35-40 роХрпБро╡ро┐рогрпНроЯро▓рпН/роПроХрпНроХро░рпН
   тАв ро▓ро╛рокроХро░родрпНродройрпНроорпИ: 7/10
   тАв роЖрокродрпНродрпБ роиро┐ро▓рпИ: роХрпБро▒рпИро╡рпБ
   тАв роЪро┐ро▒роирпНрод ро╡ро┐родрпИрокрпНрокрпБ: роиро╡роорпНрокро░рпН 15 - роЯро┐роЪроорпНрокро░рпН 15

ЁЯТб роЗроирпНрод рокро░ро┐роирпНродрпБро░рпИроХро│рпН роЙроЩрпНроХро│рпН роЗроЯроорпН, рокро░рпБро╡роорпН рооро▒рпНро▒рпБроорпН родро▒рпНрокрпЛродрпИроп роЪроирпНродрпИ роиро┐ро▓рпИроорпИроХро│ро┐ройрпН роЕроЯро┐рокрпНрокроЯрпИропро┐ро▓рпН роЕроорпИроирпНродро╡рпИ. роПродрпЗройрпБроорпН роХрпБро▒ро┐рокрпНрокро┐роЯрпНроЯ рокропро┐ро░рпИрокрпН рокро▒рпНро▒ро┐роп ро╡ро┐ро░ро┐ро╡ро╛рой родроХро╡ро▓рпН ро╡рпЗрогрпНроЯрпБрооро╛?`
        }
      };
      
      return responses[key]?.[language] || responses[key]?.['en'] || '';
    };

    if (message.includes('disease') || message.includes('pest') || message.includes('sick')) {
      return getLocalizedResponse('diseaseHelp');
    }

    if (message.includes('crop') || message.includes('recommend') || message.includes('plant')) {
      return getLocalizedResponse('cropRecommendations');
    }

    if (message.includes('weather') || message.includes('rain') || message.includes('temperature')) {
      return `ЁЯМдя╕П **Weather-Based Farming Advice:**

**Current Conditions Analysis:**
- Monitor weather alerts in the Weather section
- Heavy rain expected: Ensure proper drainage
- High temperatures: Increase irrigation frequency
- High humidity: Watch for fungal diseases

**Smart Recommendations:**
- Check weather forecasts daily
- Plan field activities based on weather
- Protect crops during extreme weather
- Use weather data for irrigation scheduling

Would you like specific advice for your current crops?`;
    }

    if (message.includes('fertilizer') || message.includes('nutrition') || message.includes('npk')) {
      return `ЁЯзк **AI Fertilizer Recommendations:**

**General Guidelines:**
- Soil testing is crucial for accurate recommendations
- Apply fertilizers based on crop growth stage
- Consider organic alternatives for soil health

**NPK Application Schedule:**
1. **Basal Application:** 50% N, 100% P, 50% K at sowing
2. **First Top Dressing:** 25% N at 30 days
3. **Second Top Dressing:** 25% N, 50% K at 60 days

**Organic Alternatives:**
- Vermicompost for slow-release nutrients
- Neem cake for pest control + nutrition
- Bone meal for phosphorus
- Wood ash for potassium

Need specific recommendations for your crop? Tell me your crop type and growth stage!`;
    }

    if (message.includes('market') || message.includes('price') || message.includes('sell')) {
      return `ЁЯУИ **Market Intelligence & Price Predictions:**

**Current Market Trends:**
- Paddy: тВ╣2,650-2,850/quintal (Stable)
- Tomato: тВ╣40-45/kg (Rising trend)
- Onion: тВ╣30-35/kg (Seasonal variation)

**AI Price Predictions:**
- Prices likely to increase by 5-8% in next 15 days
- Festival season driving demand
- Weather conditions affecting supply

**Selling Tips:**
- Monitor daily price updates in Market section
- Consider value addition for better prices
- Time your harvest based on price predictions
- Connect with multiple buyers for best rates

Check the Market section for real-time prices and trends!`;
    }

    if (message.includes('irrigation') || message.includes('water') || message.includes('watering')) {
      return `ЁЯТз **Smart Irrigation Guidance:**

**AI-Based Watering Schedule:**
- **Morning (6-8 AM):** Best time for irrigation
- **Evening (6-8 PM):** Alternative for hot weather
- **Avoid midday:** High evaporation losses

**Soil Moisture Guidelines:**
- Seedling stage: Keep soil moist (60-70%)
- Vegetative stage: Moderate moisture (50-60%)
- Flowering stage: Adequate moisture (60-70%)
- Fruiting stage: Consistent moisture (55-65%)

**Water-Saving Tips:**
- Use drip irrigation for efficiency
- Mulching to reduce evaporation
- Check soil moisture before watering
- Consider weather forecast

Would you like specific irrigation advice for your crops?`;
    }

    // Default response
    const defaultResponses: { [lang: string]: string } = {
      en: `I'm here to help with all your farming needs! I can assist you with:

ЁЯМ▒ **Crop Management:** Recommendations, planting schedules, variety selection
ЁЯРЫ **Pest & Disease:** Identification, treatment, prevention
ЁЯМдя╕П **Weather Advice:** Weather-based farming decisions
ЁЯТз **Irrigation:** Smart watering schedules and tips
ЁЯзк **Fertilizers:** NPK recommendations, organic alternatives
ЁЯУИ **Market Intelligence:** Price predictions, selling strategies

Just ask me anything about farming, or use the quick action buttons below!`,
      hi: `рдореИрдВ рдЖрдкрдХреА рд╕рднреА рдХреГрд╖рд┐ рдЖрд╡рд╢реНрдпрдХрддрд╛рдУрдВ рдореЗрдВ рдорджрдж рдХреЗ рд▓рд┐рдП рдпрд╣рд╛рдБ рд╣реВрдБ! рдореИрдВ рдЖрдкрдХреА рд╕рд╣рд╛рдпрддрд╛ рдХрд░ рд╕рдХрддрд╛ рд╣реВрдБ:

ЁЯМ▒ **рдлрд╕рд▓ рдкреНрд░рдмрдВрдзрди:** рд╕рд┐рдлрд╛рд░рд┐рд╢реЗрдВ, рд░реЛрдкрдг рдХрд╛рд░реНрдпрдХреНрд░рдо, рдХрд┐рд╕реНрдо рдЪрдпрди
ЁЯРЫ **рдХреАрдЯ рдФрд░ рд░реЛрдЧ:** рдкрд╣рдЪрд╛рди, рдЙрдкрдЪрд╛рд░, рд░реЛрдХрдерд╛рдо
ЁЯМдя╕П **рдореМрд╕рдо рд╕рд▓рд╛рд╣:** рдореМрд╕рдо рдЖрдзрд╛рд░рд┐рдд рдХреГрд╖рд┐ рдирд┐рд░реНрдгрдп
ЁЯТз **рд╕рд┐рдВрдЪрд╛рдИ:** рд╕реНрдорд╛рд░реНрдЯ рдкрд╛рдиреА рджреЗрдиреЗ рдХрд╛ рдХрд╛рд░реНрдпрдХреНрд░рдо рдФрд░ рд╕реБрдЭрд╛рд╡
ЁЯзк **рдЙрд░реНрд╡рд░рдХ:** NPK рд╕рд┐рдлрд╛рд░рд┐рд╢реЗрдВ, рдЬреИрд╡рд┐рдХ рд╡рд┐рдХрд▓реНрдк
ЁЯУИ **рдмрд╛рдЬрд╛рд░ рдмреБрджреНрдзрд┐рдорддреНрддрд╛:** рдореВрд▓реНрдп рднрд╡рд┐рд╖реНрдпрд╡рд╛рдгреА, рдмрд┐рдХреНрд░реА рд░рдгрдиреАрддрд┐

рдЦреЗрддреА рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдореБрдЭрд╕реЗ рдХреБрдЫ рднреА рдкреВрдЫреЗрдВ, рдпрд╛ рдиреАрдЪреЗ рджрд┐рдП рдЧрдП рддреНрд╡рд░рд┐рдд рдХрд╛рд░реНрдп рдмрдЯрди рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВ!`,
      te: `р░ор▒А р░Ер░ир▒Нр░ир░┐ р░╡р▒Нр░пр░╡р░╕р░╛р░п р░Ер░╡р░╕р░░р░╛р░▓р░др▒Л р░╕р░╣р░╛р░пр░В р░Ър▒Зр░пр░бр░╛р░ир░┐р░Хр░┐ р░ир▒Зр░ир▒Б р░Зр░Хр▒Нр░Хр░б р░Йр░ир▒Нр░ир░╛р░ир▒Б! р░ир▒Зр░ир▒Б р░ор▒Ар░Хр▒Б р░╕р░╣р░╛р░пр░В р░Ър▒Зр░пр░Чр░▓р░ир▒Б:

ЁЯМ▒ **р░кр░Вр░Я р░ир░┐р░░р▒Нр░╡р░╣р░г:** р░╕р░┐р░лр░╛р░░р▒Нр░╕р▒Бр░▓р▒Б, р░ир░╛р░Яр░бр░В р░╖р▒Жр░бр▒Нр░пр▒Вр░▓р▒Нр░╕р▒Н, р░░р░Хр░В р░Ор░Вр░кр░┐р░Х
ЁЯРЫ **р░Хр▒Ар░Яр░Хр░╛р░▓р▒Б & р░╡р▒Нр░пр░╛р░зр▒Бр░▓р▒Б:** р░Чр▒Бр░░р▒Нр░др░┐р░Вр░кр▒Б, р░Ър░┐р░Хр░┐р░др▒Нр░╕, р░ир░┐р░╡р░╛р░░р░г
ЁЯМдя╕П **р░╡р░╛р░др░╛р░╡р░░р░г р░╕р░▓р░╣р░╛:** р░╡р░╛р░др░╛р░╡р░░р░г р░Жр░зр░╛р░░р░┐р░д р░╡р▒Нр░пр░╡р░╕р░╛р░п р░ир░┐р░░р▒Нр░гр░пр░╛р░▓р▒Б
ЁЯТз **р░ир▒Ар░Яр░┐р░кр░╛р░░р▒Бр░жр░▓:** р░╕р▒Нр░ор░╛р░░р▒Нр░Яр▒Н р░ир▒Ар░░р▒Б р░кр▒Жр░Яр▒Нр░Яр▒З р░╖р▒Жр░бр▒Нр░пр▒Вр░▓р▒Нр░╕р▒Н р░ор░░р░┐р░пр▒Б р░Ър░┐р░Яр▒Нр░Хр░╛р░▓р▒Б
ЁЯзк **р░Ор░░р▒Бр░╡р▒Бр░▓р▒Б:** NPK р░╕р░┐р░лр░╛р░░р▒Нр░╕р▒Бр░▓р▒Б, р░╕р▒Зр░Вр░жр▒Нр░░р▒Ар░п р░кр▒Нр░░р░др▒Нр░пр░╛р░ор▒Нр░ир░╛р░пр░╛р░▓р▒Б
ЁЯУИ **р░ор░╛р░░р▒Нр░Хр▒Жр░Яр▒Н р░Зр░Вр░Яр▒Жр░▓р░┐р░Ьр▒Жр░ир▒Нр░╕р▒Н:** р░зр░░ р░Ер░Вр░Ър░ир░╛р░▓р▒Б, р░Ер░ор▒Нр░ор░Хр░кр▒Б р░╡р▒Нр░пр▒Вр░╣р░╛р░▓р▒Б

р░╡р▒Нр░пр░╡р░╕р░╛р░пр░В р░Чр▒Бр░░р░┐р░Вр░Ър░┐ р░ир░ир▒Нр░ир▒Б р░Пр░жр▒Ир░ир░╛ р░Ер░бр░Чр░Вр░бр░┐, р░▓р▒Зр░жр░╛ р░Хр▒Нр░░р░┐р░Вр░ж р░Йр░ир▒Нр░и р░др▒Нр░╡р░░р░┐р░д р░Ър░░р▒Нр░п р░мр░Яр░ир▒Нр░▓р░ир▒Б р░Йр░кр░пр▒Лр░Чр░┐р░Вр░Ър░Вр░бр░┐!`,
      ta: `роЙроЩрпНроХро│рпН роЕройрпИродрпНродрпБ ро╡ро┐ро╡роЪро╛роп родрпЗро╡рпИроХро│рпБроХрпНроХрпБроорпН роЙродро╡ роиро╛ройрпН роЗроЩрпНроХрпЗ роЗро░рпБроХрпНроХро┐ро▒рпЗройрпН! роиро╛ройрпН роЙроЩрпНроХро│рпБроХрпНроХрпБ роЙродро╡ роорпБроЯро┐ропрпБроорпН:

ЁЯМ▒ **рокропро┐ро░рпН роорпЗро▓ро╛рогрпНроорпИ:** рокро░ро┐роирпНродрпБро░рпИроХро│рпН, роироЯро╡рпБ роЕроЯрпНроЯро╡рогрпИроХро│рпН, ро╡роХрпИ родрпЗро░рпНро╡рпБ
ЁЯРЫ **рокрпВроЪрпНроЪро┐ & роирпЛропрпН:** роЕроЯрпИропро╛ро│роорпН, роЪро┐роХро┐роЪрпНроЪрпИ, родроЯрпБрокрпНрокрпБ
ЁЯМдя╕П **ро╡ро╛ройро┐ро▓рпИ роЖро▓рпЛроЪройрпИ:** ро╡ро╛ройро┐ро▓рпИ роЕроЯро┐рокрпНрокроЯрпИропро┐ро▓ро╛рой ро╡ро┐ро╡роЪро╛роп роорпБроЯро┐ро╡рпБроХро│рпН
ЁЯТз **роирпАро░рпНрокрпНрокро╛роЪройроо:** ро╕рпНрооро╛ро░рпНроЯрпН роирпАро░рпН роЕроЯрпНроЯро╡рогрпИроХро│рпН рооро▒рпНро▒рпБроорпН роХрпБро▒ро┐рокрпНрокрпБроХро│рпН
ЁЯзк **роЙро░роЩрпНроХро│рпН:** NPK рокро░ро┐роирпНродрпБро░рпИроХро│рпН, роЗропро▒рпНроХрпИ рооро╛ро▒рпНро▒рпБроХро│рпН
ЁЯУИ **роЪроирпНродрпИ роирпБрогрпНрогро▒ро┐ро╡рпБ:** ро╡ро┐ро▓рпИ роХрогро┐рокрпНрокрпБроХро│рпН, ро╡ро┐ро▒рпНрокройрпИ роЙродрпНродро┐роХро│рпН

ро╡ро┐ро╡роЪро╛ропродрпНродрпИрокрпН рокро▒рпНро▒ро┐ роОройрпНройро┐роЯроорпН роОродрпИропрпБроорпН роХрпЗро│рпБроЩрпНроХро│рпН, роЕро▓рпНро▓родрпБ роХрпАро┤рпЗ роЙро│рпНро│ ро╡ро┐ро░рпИро╡рпБ роЪрпЖропро▓рпН рокрпКродрпНродро╛ройрпНроХро│рпИрокрпН рокропройрпНрокроЯрпБродрпНродрпБроЩрпНроХро│рпН!`
    };
    
    return defaultResponses[language] || defaultResponses['en'];
  };

  const { language } = useLanguage();

  const quickActions = [
    { label: t('analyzePlantDisease'), action: 'disease' },
    { label: t('cropRecommendations'), action: 'crops' },
    { label: t('weatherAdvice'), action: 'weather' },
    { label: t('fertilizerGuide'), action: 'fertilizer' },
    { label: t('marketPrices'), action: 'market' },
    { label: t('irrigationTips'), action: 'irrigation' }
  ];

  const handleQuickAction = (action: string) => {
    const actionMessages: { [key: string]: { [lang: string]: string } } = {
      'disease': {
        en: 'How can I identify and treat plant diseases?',
        hi: 'рдореИрдВ рдкреМрдзреЛрдВ рдХреА рдмреАрдорд╛рд░рд┐рдпреЛрдВ рдХреА рдкрд╣рдЪрд╛рди рдФрд░ рдЗрд▓рд╛рдЬ рдХреИрд╕реЗ рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВ?',
        te: 'р░ор▒Кр░Хр▒Нр░Хр░▓ р░╡р▒Нр░пр░╛р░зр▒Бр░▓р░ир▒Б р░Ор░▓р░╛ р░Чр▒Бр░░р▒Нр░др░┐р░Вр░Ър░┐ р░Ър░┐р░Хр░┐р░др▒Нр░╕ р░Ър▒Зр░пр░╛р░▓р░┐?',
        ta: 'родро╛ро╡ро░ роирпЛропрпНроХро│рпИ роОро╡рпНро╡ро╛ро▒рпБ роЕроЯрпИропро╛ро│роорпН роХрогрпНроЯрпБ роЪро┐роХро┐роЪрпНроЪрпИропро│ро┐рокрпНрокродрпБ?'
      },
      'crops': {
        en: 'What crops should I plant this season?',
        hi: 'рдЗрд╕ рдореМрд╕рдо рдореЗрдВ рдореБрдЭреЗ рдХреМрди рд╕реА рдлрд╕рд▓реЗрдВ рд▓рдЧрд╛рдиреА рдЪрд╛рд╣рд┐рдП?',
        te: 'р░И р░╕р▒Ар░Ьр░ир▒НтАМр░▓р▒Л р░ир▒Зр░ир▒Б р░П р░кр░Вр░Яр░▓р▒Б р░ир░╛р░Яр░╛р░▓р░┐?',
        ta: 'роЗроирпНрод рокро░рпБро╡родрпНродро┐ро▓рпН роиро╛ройрпН роОройрпНрой рокропро┐ро░рпНроХро│рпИ роироЯро╡рпЗрогрпНроЯрпБроорпН?'
      },
      'weather': {
        en: 'Give me weather-based farming advice',
        hi: 'рдореБрдЭреЗ рдореМрд╕рдо рдЖрдзрд╛рд░рд┐рдд рдХреГрд╖рд┐ рд╕рд▓рд╛рд╣ рджреЗрдВ',
        te: 'р░ир░╛р░Хр▒Б р░╡р░╛р░др░╛р░╡р░░р░г р░Жр░зр░╛р░░р░┐р░д р░╡р▒Нр░пр░╡р░╕р░╛р░п р░╕р░▓р░╣р░╛ р░Зр░╡р▒Нр░╡р░Вр░бр░┐',
        ta: 'роОройроХрпНроХрпБ ро╡ро╛ройро┐ро▓рпИ роЕроЯро┐рокрпНрокроЯрпИропро┐ро▓ро╛рой ро╡ро┐ро╡роЪро╛роп роЖро▓рпЛроЪройрпИ роХрпКроЯрпБроЩрпНроХро│рпН'
      },
      'fertilizer': {
        en: 'What fertilizers should I use for my crops?',
        hi: 'рдореБрдЭреЗ рдЕрдкрдиреА рдлрд╕рд▓реЛрдВ рдХреЗ рд▓рд┐рдП рдХреМрди рд╕реЗ рдЙрд░реНрд╡рд░рдХ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рдирд╛ рдЪрд╛рд╣рд┐рдП?',
        te: 'р░ир░╛ р░кр░Вр░Яр░▓р░Хр▒Б р░П р░Ор░░р▒Бр░╡р▒Бр░▓р▒Б р░╡р░╛р░бр░╛р░▓р░┐?',
        ta: 'роОройрпН рокропро┐ро░рпНроХро│рпБроХрпНроХрпБ роОройрпНрой роЙро░роЩрпНроХро│рпИрокрпН рокропройрпНрокроЯрпБродрпНрод ро╡рпЗрогрпНроЯрпБроорпН?'
      },
      'market': {
        en: 'Show me current market prices and trends',
        hi: 'рдореБрдЭреЗ рд╡рд░реНрддрдорд╛рди рдмрд╛рдЬрд╛рд░ рдХреА рдХреАрдорддреЗрдВ рдФрд░ рд░реБрдЭрд╛рди рджрд┐рдЦрд╛рдПрдВ',
        te: 'р░кр▒Нр░░р░╕р▒Нр░др▒Бр░д р░ор░╛р░░р▒Нр░Хр▒Жр░Яр▒Н р░зр░░р░▓р▒Б р░ор░░р░┐р░пр▒Б р░Яр▒Нр░░р▒Жр░Вр░бр▒НтАМр░▓р░ир▒Б р░Ър▒Вр░кр░┐р░Вр░Ър░Вр░бр░┐',
        ta: 'родро▒рпНрокрпЛродрпИроп роЪроирпНродрпИ ро╡ро┐ро▓рпИроХро│рпН рооро▒рпНро▒рпБроорпН рокрпЛроХрпНроХрпБроХро│рпИроХрпН роХро╛роЯрпНроЯрпБроЩрпНроХро│рпН'
      },
      'irrigation': {
        en: 'Help me with irrigation scheduling',
        hi: 'рд╕рд┐рдВрдЪрд╛рдИ рдХрд╛рд░реНрдпрдХреНрд░рдо рдореЗрдВ рдореЗрд░реА рдорджрдж рдХрд░реЗрдВ',
        te: 'р░ир▒Ар░Яр░┐р░кр░╛р░░р▒Бр░жр░▓ р░╖р▒Жр░бр▒Нр░пр▒Вр░▓р░┐р░Вр░Чр▒НтАМр░▓р▒Л р░ир░╛р░Хр▒Б р░╕р░╣р░╛р░пр░В р░Ър▒Зр░пр░Вр░бр░┐',
        ta: 'роирпАро░рпНрокрпНрокро╛роЪрой родро┐роЯрпНроЯрооро┐роЯро▓ро┐ро▓рпН роОройроХрпНроХрпБ роЙродро╡рпБроЩрпНроХро│рпН'
      }
    };

    const message = actionMessages[action]?.[language] || actionMessages[action]?.['en'] || 'Help me with farming';
    handleSendMessage(message);
  };

  const startVoiceRecognition = () => {
    if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {
      const SpeechRecognition = (window as any).webkitSpeechRecognition || (window as any).SpeechRecognition;
      const recognition = new SpeechRecognition();
      
      recognition.continuous = false;
      recognition.interimResults = false;
      recognition.lang = 'en-US';

      recognition.onstart = () => {
        setIsListening(true);
      };

      recognition.onresult = (event: any) => {
        const transcript = event.results[0][0].transcript;
        setInputMessage(transcript);
        setIsListening(false);
      };

      recognition.onerror = () => {
        setIsListening(false);
      };

      recognition.onend = () => {
        setIsListening(false);
      };

      recognition.start();
    } else {
      alert('Speech recognition not supported in this browser');
    }
  };

  return (
    <AnimatePresence>
      {isOpen && (
        <>
          {/* Backdrop */}
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            onClick={onClose}
            className="fixed inset-0 bg-black/50 z-40"
          />
          
          {/* AI Assistant Panel */}
          <motion.div
            initial={{ opacity: 0, y: '100%' }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: '100%' }}
            transition={{ type: "spring", stiffness: 300, damping: 30 }}
            className="fixed bottom-0 left-0 right-0 h-[80vh] bg-white rounded-t-3xl z-50 flex flex-col max-w-md mx-auto"
          >
            {/* Header */}
            <div className="flex items-center justify-between p-4 border-b border-gray-200 bg-gradient-to-r from-green-500 to-blue-500 rounded-t-3xl">
              <div className="flex items-center space-x-3">
                <div className="w-10 h-10 bg-white rounded-full flex items-center justify-center">
                  <Bot size={24} className="text-green-600" />
                </div>
                <div>
                  <h2 className="text-lg font-bold text-white">{t('aiFarmAssistant')}</h2>
                  <p className="text-sm text-green-100">
                    {language === 'hi' ? 'рдЙрдиреНрдирдд AI рджреНрд╡рд╛рд░рд╛ рд╕рдВрдЪрд╛рд▓рд┐рдд' :
                     language === 'te' ? 'р░Ер░зр▒Бр░ир░╛р░др░и AI р░жр▒Нр░╡р░╛р░░р░╛ р░╢р░Хр▒Нр░др░┐р░╡р░Вр░др░В' :
                     language === 'ta' ? 'роорпЗроорпНрокроЯрпНроЯ AI роЖро▓рпН роЗропроХрпНроХрокрпНрокроЯрпБроХро┐ро▒родрпБ' :
                     'Powered by Advanced AI'}
                  </p>
                </div>
              </div>
              <button
                onClick={onClose}
                className="p-2 hover:bg-white/20 rounded-full transition-colors"
              >
                <X size={20} className="text-white" />
              </button>
            </div>

            {/* Messages */}
            <div className="flex-1 overflow-y-auto p-4 space-y-4">
              {messages.map((message) => (
                <motion.div
                  key={message.id}
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}
                >
                  <div className={`max-w-[80%] p-3 rounded-2xl ${
                    message.type === 'user' 
                      ? 'bg-green-500 text-white' 
                      : 'bg-gray-100 text-black'
                  }`}>
                    {message.type === 'ai' && (
                      <div className="flex items-center space-x-2 mb-2">
                        <Sparkles size={16} className="text-blue-500" />
                        <span className="text-xs font-semibold text-blue-500">AI Assistant</span>
                      </div>
                    )}
                    <p className="text-sm whitespace-pre-line">{message.content}</p>
                    <p className="text-xs opacity-70 mt-1">
                      {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}
                    </p>
                  </div>
                </motion.div>
              ))}
              
              {isTyping && (
                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  className="flex justify-start"
                >
                  <div className="bg-gray-100 p-3 rounded-2xl">
                    <div className="flex items-center space-x-2">
                      <Sparkles size={16} className="text-blue-500" />
                      <span className="text-xs font-semibold text-blue-500">AI Assistant</span>
                    </div>
                    <div className="flex space-x-1 mt-2">
                      <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce"></div>
                      <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
                      <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
                    </div>
                  </div>
                </motion.div>
              )}
            </div>

            {/* Quick Actions */}
            <div className="p-4 border-t border-gray-200">
              <p className="text-sm font-semibold text-gray-600 mb-2">Quick Actions:</p>
              <div className="flex flex-wrap gap-2 mb-4">
                {quickActions.map((action, index) => (
                  <motion.button
                    key={action.action}
                    initial={{ opacity: 0, scale: 0.8 }}
                    animate={{ opacity: 1, scale: 1 }}
                    transition={{ delay: index * 0.05 }}
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                    onClick={() => handleQuickAction(action.action)}
                    className="px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-xs font-medium hover:bg-blue-200 transition-colors"
                  >
                    {action.label}
                  </motion.button>
                ))}
              </div>

              {/* Input */}
              <div className="flex items-center space-x-2">
                <div className="flex-1 relative">
                  <input
                    type="text"
                    value={inputMessage}
                    onChange={(e) => setInputMessage(e.target.value)}
                    onKeyPress={(e) => e.key === 'Enter' && handleSendMessage(inputMessage)}
                    placeholder={t('askMeAnything')}
                    className="w-full px-4 py-3 bg-gray-100 rounded-full text-sm focus:outline-none focus:ring-2 focus:ring-green-500"
                  />
                </div>
                <motion.button
                  whileHover={{ scale: 1.1 }}
                  whileTap={{ scale: 0.9 }}
                  onClick={startVoiceRecognition}
                  disabled={isListening}
                  className={`p-3 rounded-full transition-colors ${
                    isListening
                      ? 'bg-red-500 text-white' 
                      : 'bg-gray-200 text-gray-600 hover:bg-gray-300'
                  }`}
                >
                  {isListening ? <MicOff size={16} /> : <Mic size={16} />}
                </motion.button>
                <motion.button
                  whileHover={{ scale: 1.1 }}
                  whileTap={{ scale: 0.9 }}
                  onClick={() => handleSendMessage(inputMessage)}
                  disabled={!inputMessage.trim() || isTyping}
                  className="p-3 bg-green-500 text-white rounded-full hover:bg-green-600 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
                >
                  <Send size={16} />
                </motion.button>
              </div>
            </div>
          </motion.div>
        </>
      )}
    </AnimatePresence>
  );
};

export default AIAssistant;